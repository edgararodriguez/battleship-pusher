{"version":3,"sources":["webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board.service.ts","webpack:///./src/app/board.ts","webpack:///./src/app/player.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 350;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 350\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","// import needed classes and services\nimport { Component, ViewContainerRef } from '@angular/core';\nimport { ToastsManager } from 'ng2-toastr/ng2-toastr';\nimport { BoardService } from './board.service'\nimport { Board } from './board'\n// set game constants\ndeclare const Pusher: any;\nconst NUM_PLAYERS = 2;\nconst BOARD_SIZE = 6;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [BoardService]\n})\n\nexport class AppComponent {\n  pusherChannel: any;\n  canPlay: boolean = true;\n  player: number = 0;\n  players: number = 0;\n  gameId: string;\n\n  constructor(\n    private toastr: ToastsManager,\n    private _vcr: ViewContainerRef,\n    private boardService: BoardService,\n  ) {\n    this.toastr.setRootViewContainerRef(_vcr);\n    this.createBoards();\n    this.initPusher();\n    this.listenForChanges();\n  }\n // initialise Pusher and bind to presence channel\n  initPusher() : AppComponent {\n    // findOrCreate unique channel ID\n    let id = this.getQueryParam('id');\n    if (!id) {\n      id = this.getUniqueId();\n      location.search = location.search ? '&id=' + id : 'id=' + id;\n    }\n    this.gameId = id;\n    // init pusher\n    const pusher = new Pusher('50cf0690ee1081a25514', {\n      authEndpoint: '/pusher/auth',\n      cluster: 'us2'\n    });\n    // bind to relevant channels\n    this.pusherChannel = pusher.subscribe(id);\n    this.pusherChannel.bind('pusher:member_added', member => { this.players++ })\n    this.pusherChannel.bind('pusher:subscription_succeeded', members => {\n      this.players = members.count;\n      this.setPlayer(this.players);\n      this.toastr.success(\"Success\", 'Connected!');\n    })\n    this.pusherChannel.bind('pusher:member_removed', member => { this.players-- });\n\n    return this;\n  }\n  // Listen for `client-fire` events.\n  // Update the board object and other properties when\n  // event triggered\n  listenForChanges() : AppComponent {\n    this.pusherChannel.bind('client-fire', (obj) => {\n      this.canPlay = !this.canPlay;\n      this.boards[obj.boardId] = obj.board;\n      this.boards[obj.player].player.score = obj.score;\n    });\n    return this;\n  }\n// initialise player and set turn\n  setPlayer(players:number = 0) : AppComponent {\n    this.player = players - 1;\n    if (players == 1) {\n      this.canPlay = true;\n    } else if (players == 2) {\n      this.canPlay = false;\n    }\n    return this;\n  }\n  // event handler for click event on\n      // each tile - fires torpedo at selected tile\n  fireTorpedo(e:any) : AppComponent {\n    let id = e.target.id,\n      boardId = id.substring(1,2),\n      row = id.substring(2,3), col = id.substring(3,4),\n      tile = this.boards[boardId].tiles[row][col];\n    if (!this.checkValidHit(boardId, tile)) {\n      return;\n    }\n\n    if (tile.value == 1) {\n      this.toastr.success(\"You got this.\", \"HURRAAA! YOU SANK A SHIP!\");\n      this.boards[boardId].tiles[row][col].status = 'win';\n      this.boards[this.player].player.score++;\n    } else {\n      this.toastr.info(\"Keep trying fam.\", \"OOPS! YOU MISSED THIS TIME\");\n      this.boards[boardId].tiles[row][col].status = 'fail'\n    }\n    this.canPlay = false;\n    this.boards[boardId].tiles[row][col].used = true;\n    this.boards[boardId].tiles[row][col].value = \"X\";\n    // trigger `client-fire` event once a torpedo\n    // is successfully fired\n    this.pusherChannel.trigger('client-fire', {\n      player: this.player,\n      score: this.boards[this.player].player.score,\n      boardId: boardId,\n      board: this.boards[boardId]\n    });\n    return this;\n  }\n\n  createBoards() : AppComponent {\n    for (let i = 0; i < NUM_PLAYERS; i++)\n      this.boardService.createBoard(BOARD_SIZE);\n    return this;\n  }\n\n  checkValidHit(boardId: number, tile: any) : boolean {\n    if (boardId == this.player) {\n      this.toastr.error(\"Don't commit suicide.\", \"You can't hit your own board.\")\n      return false;\n    }\n    if (this.winner) {\n      this.toastr.error(\"Game is over\");\n      return false;\n    }\n    if (!this.canPlay) {\n      this.toastr.error(\"A bit too eager.\", \"It's not your turn to play.\");\n      return false;\n    }\n    if(tile.value == \"X\") {\n      this.toastr.error(\"Don't waste your torpedos.\", \"You already shot here.\");\n      return false;\n    }\n    return true;\n  }\n// helper function to get query param\n  getQueryParam(name) {\n    var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);\n    return match && decodeURIComponent(match[1].replace(/\\+/g, ' '));\n  }\n//helper function to create  a unique presence channel\n//name for each game\n  getUniqueId () {\n    return 'presence-' + Math.random().toString(36).substr(2, 8);\n  }\n//get all boards and assign to board property\n  get boards () : Board[] {\n    return this.boardService.getBoards()\n  }\n  // winner property to determine if a user has won the game.\n  // once a user gets a score higher than the size of the game\n  // board, he has won.\n  get winner () : Board {\n    return this.boards.find(board => board.player.score >= BOARD_SIZE);\n  }\n//checks if player is a valid player for the game\n  get validPlayer(): boolean {\n    return (this.players >= NUM_PLAYERS) && (this.player < NUM_PLAYERS);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ToastModule } from 'ng2-toastr/ng2-toastr';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n     ToastModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Board } from './board'\nimport { Player } from './player'\n\n@Injectable()\nexport class BoardService {\n\nplayerId: number = 1;\nboards: Board[] = [];\n\n  constructor() { }\n\n// method for creating a board which takes\n// an optional size parameter that defaults to 5\n        createBoard(size:number = 5) : BoardService {\n          // create tiles for board\n          let tiles = [];\n          for(let i=0; i < size; i++) {\n            tiles[i] = [];\n            for(let j=0; j< size; j++) {\n              tiles[i][j] = { used: false, value: 0, status: '' };\n            }\n          }\n          // generate random ships for the board\n          for (let i = 0; i < size * 2; i++) {\n            tiles = this.randomShips(tiles, size);\n          }\n          // create board\n          let board = new Board({\n            player: new Player({ id: this.playerId++ }),\n            tiles: tiles\n          });\n          // append created board to `boards` property\n          this.boards.push(board);\n          return this;\n        }\n\n        // function to return the tiles after a value\n        // of 1 (a ship) is inserted into a random tile\n        // in the array of tiles\n        randomShips(tiles: Object[], len: number) : Object[] {\n          len = len - 1;\n          let ranRow = this.getRandomInt(0, len),\n              ranCol = this.getRandomInt(0, len);\n          if (tiles[ranRow][ranCol].value == 1) {\n            return this.randomShips(tiles, len);\n          } else {\n            tiles[ranRow][ranCol].value = 1;\n            return tiles;\n          }\n        }\n\n        // helper function to return a random\n        // integer between ${min} and ${max}\n        getRandomInt(min, max) {\n          return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n\n        // returns all created boards\n        getBoards() : Board[] {\n          return this.boards;\n        }\n      }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/board.service.ts","import { Player } from './player'\nexport class Board{\n  player:Player;\n  tiles:Object[];\n\n  constructor(values: Object = {}) {\n    Object.assign(this,values);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/board.ts","export class Player {\n  id: number;\n  score: number =0;\n\n  constructor(values: Object = {}) {\n    Object.assign(this,values);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 624\n// module chunks = 1","module.exports = \"<div class=\\\"section\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"content\\\">\\n      <h1 class=\\\"title\\\">Ready to sink some battleships?</h1>\\n      <h6 class=\\\"subtitle is-6\\\"><strong>Edgar's Battleship</strong></h6>\\n      <hr>\\n\\n      <!-- shows when a player has won the game -->\\n      <section *ngIf=\\\"winner\\\" class=\\\"notification is-success has-text-centered\\\" style=\\\"color:white\\\">\\n        <h1>Player {{ winner.player.id }} has won the game!</h1>\\n        <h5>Click <a href=\\\"{{ gameUrl }}\\\">here</a> to start a new game.</h5>\\n      </section>\\n\\n      <!-- shows while waiting for 2nd user to join -->\\n      <div *ngIf=\\\"players < 2\\\">\\n        <h2>Waiting for 2nd user to join...</h2>\\n        <h3 class=\\\"subtitle is-6\\\">You can invite them with this link: {{ gameUrl }}?id={{ gameId }}. You can also open <a href=\\\"{{ gameUrl }}?id={{ gameId }}\\\" target=\\\"_blank\\\">this link</a> in a new browser, to play all by yourself.</h3>\\n      </div>\\n\\n      <!-- loops through the boards array and displays the player and board tiles -->\\n      <div class=\\\"columns\\\" *ngIf=\\\"validPlayer\\\">\\n        <div class=\\\"column has-text-centered\\\" *ngFor=\\\"let board of boards; let i = index\\\">\\n          <h5>\\n            PLAYER {{ board.player.id }} <span class=\\\"tag is-info\\\" *ngIf=\\\"i == player\\\">You</span>\\n            // <strong>SCORE: {{ board.player.score }}</strong>\\n          </h5>\\n          <table class=\\\"is-bordered\\\" [style.opacity] = \\\"i == player ? 0.5 : 1\\\">\\n            <tr *ngFor=\\\"let row of board.tiles; let j = index\\\">\\n              <td *ngFor=\\\"let col of row; let k = index\\\"\\n              (click) = \\\"fireTorpedo($event)\\\"\\n              [style.background-color] = \\\"col.used ? '' : 'transparent'\\\"\\n              [class.win] = \\\"col.status == 'win'\\\" [class.fail] = \\\"col.status !== 'win'\\\"\\n              class=\\\"battleship-tile\\\" id=\\\"t{{i}}{{j}}{{k}}\\\">\\n              {{ col.value == \\\"X\\\" ? \\\"X\\\" : \\\"💀\\\" }}\\n            </td>\\n          </tr>\\n        </table>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"has-text-centered\\\">\\n      <span class=\\\"tag is-warning\\\" *ngIf=\\\"canPlay\\\">Your turn!</span>\\n      <span class=\\\"tag is-danger\\\" *ngIf=\\\"!canPlay\\\">Other player's turn.</span>\\n      <h5 class=\\\"title\\\"><small>{{ players }} player(s) in game</small></h5>\\n    </div>\\n\\n  </div>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 626\n// module chunks = 1"],"sourceRoot":""}